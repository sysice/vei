# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import VEIv1_0_pb2 as VEIv1__0__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class VEIv1_0Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PublishImage = channel.stream_unary(
                '/VEIv1_0.VEIv1_0/PublishImage',
                request_serializer=VEIv1__0__pb2.PubImageParams.SerializeToString,
                response_deserializer=VEIv1__0__pb2.ErrorResponse.FromString,
                )
        self.SubscribeImage = channel.unary_stream(
                '/VEIv1_0.VEIv1_0/SubscribeImage',
                request_serializer=VEIv1__0__pb2.SubImageParams.SerializeToString,
                response_deserializer=VEIv1__0__pb2.ImageData.FromString,
                )
        self.DeleteCamera = channel.unary_unary(
                '/VEIv1_0.VEIv1_0/DeleteCamera',
                request_serializer=VEIv1__0__pb2.CameraID.SerializeToString,
                response_deserializer=VEIv1__0__pb2.ErrorResponse.FromString,
                )
        self.PublishVisionOutput = channel.stream_unary(
                '/VEIv1_0.VEIv1_0/PublishVisionOutput',
                request_serializer=VEIv1__0__pb2.PubVisionParams.SerializeToString,
                response_deserializer=VEIv1__0__pb2.ErrorResponse.FromString,
                )
        self.SubscribeVisionOutput = channel.unary_stream(
                '/VEIv1_0.VEIv1_0/SubscribeVisionOutput',
                request_serializer=VEIv1__0__pb2.SubVisionParams.SerializeToString,
                response_deserializer=VEIv1__0__pb2.VisionOutput.FromString,
                )
        self.PublishToCloud = channel.stream_unary(
                '/VEIv1_0.VEIv1_0/PublishToCloud',
                request_serializer=VEIv1__0__pb2.PubCloudParams.SerializeToString,
                response_deserializer=VEIv1__0__pb2.ErrorResponse.FromString,
                )
        self.ListCameras = channel.unary_unary(
                '/VEIv1_0.VEIv1_0/ListCameras',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=VEIv1__0__pb2.Cameras.FromString,
                )
        self.ListApplications = channel.unary_unary(
                '/VEIv1_0.VEIv1_0/ListApplications',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=VEIv1__0__pb2.Applications.FromString,
                )
        self.ListClouds = channel.unary_unary(
                '/VEIv1_0.VEIv1_0/ListClouds',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=VEIv1__0__pb2.Clouds.FromString,
                )


class VEIv1_0Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def PublishImage(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCamera(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishVisionOutput(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeVisionOutput(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishToCloud(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCameras(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListApplications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListClouds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VEIv1_0Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PublishImage': grpc.stream_unary_rpc_method_handler(
                    servicer.PublishImage,
                    request_deserializer=VEIv1__0__pb2.PubImageParams.FromString,
                    response_serializer=VEIv1__0__pb2.ErrorResponse.SerializeToString,
            ),
            'SubscribeImage': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeImage,
                    request_deserializer=VEIv1__0__pb2.SubImageParams.FromString,
                    response_serializer=VEIv1__0__pb2.ImageData.SerializeToString,
            ),
            'DeleteCamera': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCamera,
                    request_deserializer=VEIv1__0__pb2.CameraID.FromString,
                    response_serializer=VEIv1__0__pb2.ErrorResponse.SerializeToString,
            ),
            'PublishVisionOutput': grpc.stream_unary_rpc_method_handler(
                    servicer.PublishVisionOutput,
                    request_deserializer=VEIv1__0__pb2.PubVisionParams.FromString,
                    response_serializer=VEIv1__0__pb2.ErrorResponse.SerializeToString,
            ),
            'SubscribeVisionOutput': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeVisionOutput,
                    request_deserializer=VEIv1__0__pb2.SubVisionParams.FromString,
                    response_serializer=VEIv1__0__pb2.VisionOutput.SerializeToString,
            ),
            'PublishToCloud': grpc.stream_unary_rpc_method_handler(
                    servicer.PublishToCloud,
                    request_deserializer=VEIv1__0__pb2.PubCloudParams.FromString,
                    response_serializer=VEIv1__0__pb2.ErrorResponse.SerializeToString,
            ),
            'ListCameras': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCameras,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=VEIv1__0__pb2.Cameras.SerializeToString,
            ),
            'ListApplications': grpc.unary_unary_rpc_method_handler(
                    servicer.ListApplications,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=VEIv1__0__pb2.Applications.SerializeToString,
            ),
            'ListClouds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListClouds,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=VEIv1__0__pb2.Clouds.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'VEIv1_0.VEIv1_0', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VEIv1_0(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PublishImage(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/VEIv1_0.VEIv1_0/PublishImage',
            VEIv1__0__pb2.PubImageParams.SerializeToString,
            VEIv1__0__pb2.ErrorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/VEIv1_0.VEIv1_0/SubscribeImage',
            VEIv1__0__pb2.SubImageParams.SerializeToString,
            VEIv1__0__pb2.ImageData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCamera(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VEIv1_0.VEIv1_0/DeleteCamera',
            VEIv1__0__pb2.CameraID.SerializeToString,
            VEIv1__0__pb2.ErrorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishVisionOutput(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/VEIv1_0.VEIv1_0/PublishVisionOutput',
            VEIv1__0__pb2.PubVisionParams.SerializeToString,
            VEIv1__0__pb2.ErrorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeVisionOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/VEIv1_0.VEIv1_0/SubscribeVisionOutput',
            VEIv1__0__pb2.SubVisionParams.SerializeToString,
            VEIv1__0__pb2.VisionOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishToCloud(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/VEIv1_0.VEIv1_0/PublishToCloud',
            VEIv1__0__pb2.PubCloudParams.SerializeToString,
            VEIv1__0__pb2.ErrorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCameras(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VEIv1_0.VEIv1_0/ListCameras',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            VEIv1__0__pb2.Cameras.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListApplications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VEIv1_0.VEIv1_0/ListApplications',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            VEIv1__0__pb2.Applications.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListClouds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VEIv1_0.VEIv1_0/ListClouds',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            VEIv1__0__pb2.Clouds.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
